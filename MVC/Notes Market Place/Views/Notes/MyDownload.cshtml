@model IEnumerable<Notes_Market_Place.Models.Download>

@using Notes_Market_Place.Models

@{
    ViewBag.Title = "MyDownload";
    Layout = "~/Views/Shared/_HomeLayout.cshtml";
}

<section class="buyerrequest">
    <div class="container">
        @using (Html.BeginForm("MyDownload", "Notes",FormMethod.Get))
        {
            <div class="row">
                <div class="col-md-6">
                    <div class="heading-01">
                        <h2>My Downloads</h2>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="row">
                        <div class="col-md-8 col-sm-8 col-8">
                            <div class="form-group dash-search front-serach-box">
                                <span class="fa fa-search form-control-feedback"></span>
                                @Html.TextBox("Search", null, new { @class = "form-control", @placeholder = "Search" })
                            </div>
                        </div>
                        <div class="col-md-4 col-sm-4 col-4">
                            <div>
                                <input class="btn btn-admin btn-home-03" type="submit" value="search" name="Search">
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        }
        <div class="row table-responsive">
            <table class="table">
                <thead>
                    <tr class="titles">
                        <th scope="col">SR NO.</th>
                        <th scope="col">
                            @Html.ActionLink("NOTE TITLE", "MyDownload", new { Sortorder = ViewBag.Sortorder == null ? "DESC" : (ViewBag.Sortorder == "ASC" ? "DESC" : "ASC"), SortBy = "TITLE", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber }, new { @style = "color:#000000;" })
                        </th>
                        <th scope="col">
                            @Html.ActionLink("CATEGORY", "MyDownload", new { Sortorder = ViewBag.Sortorder == null ? "DESC" : (ViewBag.Sortorder == "ASC" ? "DESC" : "ASC"), SortBy = "CATEGORY", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber }, new { @style = "color:#000000;" })
                        </th>
                        <th scope="col">BUYER</th>
                        <th scope="col">PHONE NO.</th>
                        <th scope="col">
                            @Html.ActionLink("SELL TYPE", "MyDownload", new { Sortorder = ViewBag.Sortorder == null ? "DESC" : (ViewBag.Sortorder == "ASC" ? "DESC" : "ASC"), SortBy = "SELL TYPE", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber }, new { @style = "color:#000000;" })
                        </th>

                        <th scope="col">
                            @Html.ActionLink("PRICE", "MyDownload", new { Sortorder = ViewBag.Sortorder == null ? "DESC" : (ViewBag.Sortorder == "ASC" ? "DESC" : "ASC"), SortBy = "PRICE", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber }, new { @style = "color:#000000;" })
                        </th>
                        <th scope="col">
                            @Html.ActionLink("DOWNLOAD DATE/TIME", "MyDownload", new { Sortorder = ViewBag.Sortorder == null ? "DESC" : (ViewBag.Sortorder == "ASC" ? "DESC" : "ASC"), SortBy = "DOWNLOAD DATE/TIME", PageNumber = ViewBag.PageNumber == 0 ? 1 : ViewBag.PageNumber }, new { @style = "color:#000000;" })
                        </th>
                        <th scope="col"></th>
                        <th scope="col"></th>
                    </tr>
                </thead>
                @if (ViewBag.Message != null)
                {
                    <tr class="text-center"><td colspan="10">@ViewBag.Message</td></tr>
                }
            <tbody class="table-data">
                @{var srno = (ViewBag.PageNumber - 1) * 10; }
                @foreach (var item in Model)
                {
                    srno = srno + 1;
                    if (item.IsSellerHasAllowedDownloads == true)
                    {
                        <tr>
                            <td>
                                @srno
                            </td>
                            <td>
                                <a href="@Url.Action("NotesDeatil", "Home", new {id = item.NoteID })">@Html.DisplayFor(modelItem => item.NoteTitle)</a>
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.NoteCategory)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.User1.EmailID)
                            </td>
                            <td>
                                @{
                                    var db = new Notes_Market_Place.Models.NotesMarketPLaceEntities();
                                    var Addedby = db.UserProfiles.Where(x => x.UserID == item.CreatedBy).FirstOrDefault();
                                    var country = db.Countries.Where(x => x.CountryCode == Addedby.Phone_number_Country_Code).FirstOrDefault();
                                }
                                +@Addedby.Phone_number_Country_Code@Addedby.phonenumber
                            </td>
                            @if (item.IsPaid == false)
                            {
                                <td>
                                    Free

                                </td>
                                <td>
                                    $0
                                </td>
                            }
                            else
                            {
                                <td>
                                    Paid

                                </td>
                                <td>
                                    $@Html.DisplayFor(modelItem => item.PurchasedPrice)
                                </td>
                            }
                            <td>
                                @item.ModifiedDate.Value.ToString("dd MMM yyyy,hh:mm:ss")
                            </td>

                            <td> <a href="@Url.Action("NotesDeatil", "Home", new {id = item.NoteID })"><img src="~/Content/images/eye.png" alt=""></a></td>
                            <td class="dropleft">
                                <a class="dropdown" href="#" id="navbarDropdoenMenuLink" role="button" data-toggle="dropdown"
                                   aria-haspopup="true" aria-expanded="false"><img src="~/Content/images/dots.png" alt="view"></a>
                                <div class="dropdown-menu" aria-labelledby="navbarDropdoenMenuLink">
                                    <a href="@Url.Action("Download","Notes",new {id=item.NoteID})" class="dropdown-item">Download Note</a>
                                    <a data-target="#addreview-@item.NoteID" class="dropdown-item" data-toggle="modal" role="button">Add Review/Feedback</a>
                                    <a data-target="#reportspam-@item.NoteID" class="dropdown-item" data-toggle="modal" role="button">Report as Inappropriate</a>
                                </div>

                                @if (item.NoteID != 0)
                                {
                                    <div class="modal fade" id="addreview-@item.NoteID" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
                                         aria-hidden="true">

                                        @Html.Action("Addreview", "Notes", new { id = item.NoteID })

                                    </div>
                                }

                                @if (item.NoteID != 0)
                                {
                                    <div class="modal fade" id="reportspam-@item.NoteID" tabindex="-1" role="dialog" aria-labelledby="exampleModalLabel"
                                         aria-hidden="true">

                                        @Html.Action("Reportanissue", "Notes", new { id = item.NoteID })

                                    </div>
                                }
                            </td>
                        </tr>
                    }

                }
            </tbody>
            </table>
        </div>

        <section class="dashboard-pagination">
            <div class="pagelist">
                <nav>
                    <ul class="pagination justify-content-center">
                        @{
                            if (ViewBag.totalpages != null)
                            {
                                double TotalPages = ViewBag.totalpages;
                                if (ViewBag.PageNumber == 1)
                                {
                                    <li class="page-item">
                                        @Html.ActionLink("<", "MyDownload", new { Sortorder = ViewBag.Sortorder == null ? "DESC" : ViewBag.Sortorder, SortBy = ViewBag.SortBy == null ? "TITLE" : ViewBag.SortBy, PageNumber = ViewBag.PageNumber }, new { @class = "page-link" })
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item">
                                        @Html.ActionLink("<", "MyDownload", new { Sortorder = ViewBag.Sortorder == null ? "DESC" : ViewBag.Sortorder, SortBy = ViewBag.SortBy == null ? "TITLE" : ViewBag.SortBy, PageNumber = ViewBag.PageNumber - 1 }, new { @class = "page-link" })
                                    </li>
                                }
                                for (int i = 1; i <= TotalPages; i++)
                                {
                                    if (i == ViewBag.PageNumber)
                                    {
                                        <li class="page-item active ">
                                            @Html.ActionLink(i.ToString(), "MyDownload", new { Sortorder = ViewBag.Sortorder == null ? "DESC" : ViewBag.Sortorder, SortBy = ViewBag.SortBy == null ? "TITLE" : ViewBag.SortBy, PageNumber = i }, new { @class = "page-link" })
                                        </li>
                                    }
                                    else
                                    {
                                        <li class="page-item ">
                                            @Html.ActionLink(i.ToString(), "MyDownload", new { Sortorder = ViewBag.Sortorder == null ? "DESC" : ViewBag.Sortorder, SortBy = ViewBag.SortBy == null ? "TITLE" : ViewBag.SortBy, PageNumber = i }, new { @class = "page-link" })
                                        </li>
                                    }
                                }
                                if (ViewBag.PageNumber == TotalPages)
                                {
                                    <li class="page-item">
                                        @Html.ActionLink(">", "MyDownload", new { Sortorder = ViewBag.Sortorder == null ? "DESC" : ViewBag.Sortorder, SortBy = ViewBag.SortBy == null ? "TITLE" : ViewBag.SortBy, PageNumber = ViewBag.PageNumber }, new { @class = "page-link" })
                                    </li>
                                }
                                else
                                {
                                    <li class="page-item">
                                        @Html.ActionLink(">", "MyDownload", new { Sortorder = ViewBag.Sortorder == null ? "DESC" : ViewBag.Sortorder, SortBy = ViewBag.SortBy == null ? "TITLE" : ViewBag.SortBy, PageNumber = ViewBag.PageNumber + 1 }, new { @class = "page-link" })
                                    </li>
                                }
                            }
                        }
                    </ul>
                </nav>
            </div>
        </section>

    </div>
</section>















